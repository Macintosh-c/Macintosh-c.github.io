<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>macintosh-c&#39;s bog</title>
  <icon>https://www.gravatar.com/avatar/aec2ea475468bef1ef6aafb32d76a922</icon>
  <subtitle>当你的才华撑不起你的野心时，就应该静下心来好好学习。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://macintosh-c.github.io/"/>
  <updated>2018-08-13T06:47:39.283Z</updated>
  <id>http://macintosh-c.github.io/</id>
  
  <author>
    <name>Macintosh-c</name>
    <email>657582163@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据库基础(三):查询</title>
    <link href="http://macintosh-c.github.io/2018/08/13/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B8%89/"/>
    <id>http://macintosh-c.github.io/2018/08/13/数据库基础-三/</id>
    <published>2018-08-13T04:49:36.000Z</published>
    <updated>2018-08-13T06:47:39.283Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h2><p>1.查询一张表：select * from 表名；</p><p>2.查询指定字段：select 字段1，字段2，字段3… from 表名；</p><h2 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h2><p>1.where条件查询：select 字段1，字段2，字段3 from 表名 where 条件表达式；<br><br>例:<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from t_studect where id=1;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from t_student where age&gt;22;</span><br></pre></td></tr></table></figure><p>2.带in关键字查询：select 字段1，字段2 from 表名 where 字段 [not]in(元素1，元素2)；<br><br>例：<br><br><code>select * from t_student where age in (21,23);</code><br><code>select * frome t_student where age not between 21 and 29;</code></p><p>3.带between and的范围查询：select 字段1，字段2 from 表名 where 字段 [not]between 取值1 and 取值2；<br><br>例：<br><br><code>select * frome t_student where age between 21 and 29;</code><br><code>select * frome t_student where age not between 21 and 29;</code></p><p>4.带like的模糊查询：select 字段1，字段2… from 表名 where 字段 [not] like ‘字符串’；<br><br>“%”代表任意字符；“_”代表单个字符；<br>例：<br><br><code>select * frome t_student where stuName like &#39;张三&#39;；</code><br><code>select * frome t_student where stuName like &#39;张三%&#39;；</code><br><code>select * frome t_student where stuName like &#39;%张三%&#39;；</code><br><code>select * frome t_student where stuName like &#39;张三_&#39;</code></p><p>5.空值查询：select 字段1，字段2… from 表名 where 字段  is[not] null;</p><p>6.distinct去重复查询：select distinct 字段名 from 表名；</p><p>7.对查询结果排序order by：select 字段1，字段2… from 表名 order by 属性名 [asc|desc]<br><br>例：<br><br><code>select * frome t_student order by age desc；//降序，从大到小</code><br><code>select * frome t_student order by age asc；//升序，asc默认可以不写</code></p><h2 id="多条件查询"><a href="#多条件查询" class="headerlink" title="多条件查询"></a>多条件查询</h2><p>1.带and的多条件查询：select 字段1，字段2… from 表名 where 条件表达式1 and 条件表达式2 [and 条件表达式n]<br><br>例：<br><br><code>select * frome t_student where gradeName=&#39;一年级&#39; and age=23；</code></p><p>2.带or的多条件查询：select 字段1，字段2… from 表名 where 条件表达式1 or 条件表达式2 [or 条件表达式n]<br>例：<br><br><code>select * frome t_student where gradeName=’一年级’ or age=23；//或者，条件只要满足一个</code></p><h2 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h2><p>分组查询:group by 属性名 [having 条件表达式][with rollup]</p><ul><li><p>1.与group_concat()函数一起使用；例：<br><br><code>select gradeName,group_concat(stuName) from t_student group by gradeName;</code><br><img src="https://i.imgur.com/lAI0UMv.png" alt=""></p></li><li><p>2.与聚合函数一起使用；例：<br><br><code>select gradeName,count(stuName) from t_student group by gradeName;</code><br><img src="https://i.imgur.com/cvzRAO5.png" alt=""></p></li><li><p>3.与having一起使用（显示输出的结果)；例：<br><br><code>select gradeName,count(stuName) from t_student group by gradeName having count(stuName)&gt;3;</code><br><img src="https://i.imgur.com/Jd8eTvh.png" alt=""></p></li><li><p>4.与with rollup 一起使用（最后加入一个总和行）；例：<br><br><code>select gradeName,group_concat(stuName) from t_student group by gradeName with rollup;</code><br><img src="https://i.imgur.com/mX5qbfP.png" alt=""></p></li></ul><h2 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h2><p>limit 分页查询：select 字段1，字段2，…from 表名 limit 初始位置，记录数；<br>例：<br><br><code>select * from t_student limit 0,5；</code></p><h2 id="多表连接查询"><a href="#多表连接查询" class="headerlink" title="多表连接查询"></a>多表连接查询</h2><p>表一：t_book<br><br><img src="https://i.imgur.com/rT0u5XC.png" alt=""><br><br>表二：t_bookType<br><br><img src="https://i.imgur.com/Nm4vlpK.png" alt=""><br><br>表三：t_priceLevel<br><br><img src="https://i.imgur.com/jEUZQPS.png" alt=""><br></p><p><code>select * from t_book,t_bookType;</code><br><br><img src="https://i.imgur.com/BFFzDw6.png" alt=""></p><ul><li><p>1.内连接查询（两张或以上的表连接起来查询需要的数据）<br><br>根据表一的bookTypeId查询出所有bookTypeName<br><code>select * from t_book,t_bookType where t_book.bookTypeId=t_bookType.id;</code><br><img src="https://i.imgur.com/SrvlHlw.png" alt=""><br>查询某几个字段：<br><code>select bookNme,author from t_book,t_bookType where t_book.bookTypeId=t_bookType.id;</code><br><img src="https://i.imgur.com/u9ysxxo.png" alt=""></p></li><li><p>2.外连接查询（两张或以上的表连接起来查询某张表的信息）<br><br>  左连接查询<br><code>select * from t_book left join t_bookType on t_book.bookTypeId=t_bookType.id;</code><br>如下图：表一（左边表）t_book的数据全部查出 表二没有的字段用null代替<br><img src="https://i.imgur.com/Tcm5dbz.png" alt=""></p><p>  右连接查询<br><code>select * from t_book right join t_bookType on t_book.bookTypeId=t_bookType.id;</code><br>查出表二（右边表）的所有信息，表一没有的用null代替<br><img src="https://i.imgur.com/IsflZBa.png" alt=""></p></li><li><p>3.多条件连接查询<br><code>select * from t_book,t_bookType where t_book.bookTypeId=t_bookType.id and t_book.price&gt;70;</code><br><img src="https://i.imgur.com/lyn1Iym.png" alt=""></p></li></ul><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><ul><li><p>1.带in关键字的子查询（一个查询语句的条件可能落在另一个select语句的查询结果中）<br><code>select * from t_book where bookType in(select id from t_bookType);</code><br><code>select * from t_book where bookType not in(select id from t_bookType);</code></p></li><li><p>2.带比较运算符的子查询（子查询可以使用比较运算符）<br><code>select * from t_book where price&gt;=(select price from t_priceLevel where priceLevel=1);</code></p></li><li><p>3.带exists关键字的子查询（加入子查询查询到记录，则进行外层查询，否则，不执行外层查询）<br><code>select * from t_book where exists(select * from t_booktype);</code><br><code>select * from t_book where not exists(select * from t_booktype);</code></p></li><li><p>4.带any关键字的子查询（any关键字表示满足其中任一条件）<br><code>select * from t_book where price&gt;= any(select price from t_priceLevel);</code></p></li><li><p>5.带all关键字的子查询（all关键字表示满足所有条件）<br><code>select * from t_book where price&gt;= all(select price from t_priceLevel);</code></p></li></ul><h2 id="合并查询"><a href="#合并查询" class="headerlink" title="合并查询"></a>合并查询</h2><ul><li><p>1.union<br>使用union关键字是，数据库系统会将所有的查询结果合并到一起，然后去掉相同的记录；<br><code>select id from t_book union select id from t_bookType;</code></p></li><li><p>2.union all<br>使用union all，不会去除掉重复的记录；<br><code>select id from t_book union all select id from t_bookType;</code></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;基础查询&quot;&gt;&lt;a href=&quot;#基础查询&quot; class=&quot;headerlink&quot; title=&quot;基础查询&quot;&gt;&lt;/a&gt;基础查询&lt;/h2&gt;&lt;p&gt;1.查询一张表：select * from 表名；&lt;/p&gt;
&lt;p&gt;2.查询指定字段：select 字段1，字段2，字段3… 
      
    
    </summary>
    
      <category term="数据库 | Database" scheme="http://macintosh-c.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93-Database/"/>
    
    
      <category term="database" scheme="http://macintosh-c.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>数据库基础(二):经典练习案例</title>
    <link href="http://macintosh-c.github.io/2018/08/13/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%BA%8C/"/>
    <id>http://macintosh-c.github.io/2018/08/13/数据库基础-二/</id>
    <published>2018-08-13T03:29:52.000Z</published>
    <updated>2018-08-13T04:21:44.555Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据库练习经典案例（mysql）"><a href="#数据库练习经典案例（mysql）" class="headerlink" title="数据库练习经典案例（mysql）"></a>数据库练习经典案例（mysql）</h2><h3 id="表架构"><a href="#表架构" class="headerlink" title="表架构"></a>表架构</h3><p>Student(S,Sname,Sage,Ssex) 学生表<br><br>Course(C,Cname,T) 课程表 <br><br>SC(S,C,score) 成绩表 <br><br>Teacher(T,Tname) 教师表<br></p><h3 id="建表语句"><a href="#建表语句" class="headerlink" title="建表语句"></a>建表语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE student (</span><br><span class="line">     s   INT, </span><br><span class="line">     sname nvarchar(32), </span><br><span class="line">     sage  INT, </span><br><span class="line">     ssex  nvarchar(8)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE course </span><br><span class="line">  ( </span><br><span class="line">     c    INT, </span><br><span class="line">     cname nvarchar(32), </span><br><span class="line">     t    INT </span><br><span class="line">  )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE sc </span><br><span class="line">  ( </span><br><span class="line">     s    INT, </span><br><span class="line">     c    INT, </span><br><span class="line">     score INT </span><br><span class="line">  )</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE teacher </span><br><span class="line">( </span><br><span class="line">   t    INT, </span><br><span class="line">   tname nvarchar(16) </span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><a href="#jump">插入表测试数据语句见文章末尾</a></p><h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><p>1、查询“001”课程比“002”课程成绩高的所有学生的学号； </p><p>2、查询平均成绩大于60分的同学的学号和平均成绩； </p><p>3、查询所有同学的学号、姓名、选课数、总成绩； </p><p>4、查询姓“李”的老师的个数； </p><p>5、查询没学过“叶平”老师课的同学的学号、姓名； </p><p>6、查询学过“001”并且也学过编号“002”课程的同学的学号、姓名； </p><p>7、查询学过“叶平”老师所教的所有课的同学的学号、姓名； </p><p>8、查询课程编号“002”的成绩比课程编号“001”课程低的所有同学的学号，姓名； </p><p>9、查询所有课程成绩小于60分的同学的学号、姓名； </p><p>10、查询没有学全所有课的同学的学号、姓名； </p><p>11、查询至少有一门课与学号为“1001”的同学所学相同的同学的学号和姓名； </p><p>12、查询至少学过学号为“001”同学所有一门课的其他同学学号和姓名； </p><p>13、把“SC”表中“叶平”老师教的课的成绩都更改为此课程的平均成绩； </p><p>14、查询和“1002”号的同学学习的课程完全相同的其他同学学号和姓名； </p><p>15、删除学习“叶平”老师课的SC表记录； </p><p>16、向SC表中插入一些记录，这些记录要求符合以下条件：没有上过编号“003”课程的同学学号、“002”课程的平均成绩； </p><p>17、按平均成绩从高到低显示所有学生的“数据库”、“企业管理”、“英语”三门的课程成绩，按如下形式显示： 学生ID,,数据库,企业管理,英语,有效课程数,有效平均分 </p><p>18、查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分 </p><p>19、按各科平均成绩从低到高和及格率的百分数从高到低顺序 </p><p>20、查询如下课程平均成绩和及格率的百分数(用”1行”显示): 企业管理（001），马克思（002），OO&amp;UML （003），数据库（004） </p><p>21、查询不同老师所教不同课程平均分从高到低显示 </p><p>22、查询如下课程成绩第 3 名到第 6 名的学生成绩单：企业管理（001），马克思（002），UML （003），数据库（004）  </p><p>23、统计列印各科成绩,各分数段人数:课程ID,课程名称,[100-85],[85-70],[70-60],[ &lt;60] </p><p>24、查询学生平均成绩及其名次  </p><p>25、查询各科成绩前三名的记录:(不考虑成绩并列情况) </p><p>26、查询每门课程被选修的学生数 </p><p>27、查询出只选修了一门课程的全部学生的学号和姓名 </p><p>28、查询男生、女生人数 </p><p>29、查询姓“张”的学生名单 </p><p>30、查询同名同性学生名单，并统计同名人数 </p><p>31、1981年出生的学生名单(注：Student表中Sage列的类型是datetime) </p><p>32、查询每门课程的平均成绩，结果按平均成绩升序排列，平均成绩相同时，按课程号降序排列 </p><p>33、查询平均成绩大于85的所有学生的学号、姓名和平均成绩 </p><p>34、查询课程名称为“数据库”，且分数低于60的学生姓名和分数 </p><p>35、查询所有学生的选课情况； </p><p>36、查询任何一门课程成绩在70分以上的姓名、课程名称和分数； </p><p>37、查询不及格的课程，并按课程号从大到小排列 </p><p>38、查询课程编号为003且课程成绩在80分以上的学生的学号和姓名； </p><p>39、求选了课程的学生人数 </p><p>40、查询选修“叶平”老师所授课程的学生中，成绩最高的学生姓名及其成绩 </p><p>41、查询各个课程及相应的选修人数 </p><p>42、查询不同课程成绩相同的学生的学号、课程号、学生成绩 </p><p>43、查询每门功成绩最好的前两名 </p><p>44、统计每门课程的学生选修人数（超过10人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，查询结果按人数降序排列，若人数相同，按课程号升序排列  </p><p>45、检索至少选修两门课程的学生学号 </p><p>46、查询全部学生都选修的课程的课程号和课程名 </p><p>47、查询没学过“叶平”老师讲授的任一门课程的学生姓名 </p><p>48、查询两门以上不及格课程的同学的学号及其平均成绩 </p><p>49、检索“004”课程分数小于60，按分数降序排列的同学学号 </p><p>50、删除“002”同学的“001”课程的成绩 </p><h3 id="测试数据语句："><a href="#测试数据语句：" class="headerlink" title="测试数据语句："></a><span id="jump">测试数据语句：</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">insert into Student select 1,N&apos;刘一&apos;,18,N&apos;男&apos; union all</span><br><span class="line"> select 2,N&apos;钱二&apos;,19,N&apos;女&apos; union all</span><br><span class="line"> select 3,N&apos;张三&apos;,17,N&apos;男&apos; union all</span><br><span class="line"> select 4,N&apos;李四&apos;,18,N&apos;女&apos; union all</span><br><span class="line"> select 5,N&apos;王五&apos;,17,N&apos;男&apos; union all</span><br><span class="line"> select 6,N&apos;赵六&apos;,19,N&apos;女&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> insert into Teacher select 1,N&apos;叶平&apos; union all</span><br><span class="line">select 2,N&apos;贺高&apos; union all</span><br><span class="line">select 3,N&apos;杨艳&apos; union all</span><br><span class="line">select 4,N&apos;周磊&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert into Course select 1,N&apos;语文&apos;,1 union all</span><br><span class="line">select 2,N&apos;数学&apos;,2 union all</span><br><span class="line">select 3,N&apos;英语&apos;,3 union all</span><br><span class="line">select 4,N&apos;物理&apos;,4</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">insert into SC </span><br><span class="line">select 1,1,56 union all </span><br><span class="line">select 1,2,78 union all </span><br><span class="line">select 1,3,67 union all </span><br><span class="line">select 1,4,58 union all </span><br><span class="line">select 2,1,79 union all </span><br><span class="line">select 2,2,81 union all </span><br><span class="line">select 2,3,92 union all </span><br><span class="line">select 2,4,68 union all </span><br><span class="line">select 3,1,91 union all </span><br><span class="line">select 3,2,47 union all </span><br><span class="line">select 3,3,88 union all </span><br><span class="line">select 3,4,56 union all </span><br><span class="line">select 4,2,88 union all </span><br><span class="line">select 4,3,90 union all </span><br><span class="line">select 4,4,93 union all </span><br><span class="line">select 5,1,46 union all </span><br><span class="line">select 5,3,78 union all </span><br><span class="line">select 5,4,53 union all </span><br><span class="line">select 6,1,35 union all </span><br><span class="line">select 6,2,68 union all </span><br><span class="line">select 6,4,71</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数据库练习经典案例（mysql）&quot;&gt;&lt;a href=&quot;#数据库练习经典案例（mysql）&quot; class=&quot;headerlink&quot; title=&quot;数据库练习经典案例（mysql）&quot;&gt;&lt;/a&gt;数据库练习经典案例（mysql）&lt;/h2&gt;&lt;h3 id=&quot;表架构&quot;&gt;&lt;a h
      
    
    </summary>
    
      <category term="数据库 | Database" scheme="http://macintosh-c.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93-Database/"/>
    
    
      <category term="database" scheme="http://macintosh-c.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>数据库基础(一):DDL/DML/DCL/TCL基本概念</title>
    <link href="http://macintosh-c.github.io/2018/08/13/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80-%E4%B8%80/"/>
    <id>http://macintosh-c.github.io/2018/08/13/数据库基础-一/</id>
    <published>2018-08-13T03:24:45.000Z</published>
    <updated>2018-08-13T04:48:06.853Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>DDL/DML/DCL/TCL基本概念</p><h3 id="1-数据定义语言DDL"><a href="#1-数据定义语言DDL" class="headerlink" title="1.数据定义语言DDL"></a>1.数据定义语言DDL</h3><p>DDL((Data Definition Language)，用于定义/修改/删除数据对象(如表)的数据结构，或者说，DDL语言操作的对象是数据库中的对象而非对象所包含的数据。</p><p>DDL包含以下语句：</p><pre><code>- CREATE : 在数据库中创建新的数据对象- ALTER : 修改数据库中对象的数据结构- DROP : 删除数据库中的对象- DISABLE/ENABLE TRIGGER : 修改触发器的状态- UPDATE STATISTIC : 更新表/视图统计信息- TRUNCATE TABLE : 清空表中数据- COMMENT : 给数据对象添加注释- RENAME : 更改数据对象名称</code></pre><h3 id="2-数据操作语言DML"><a href="#2-数据操作语言DML" class="headerlink" title="2.数据操作语言DML"></a>2.数据操作语言DML</h3><p>DML(Data Manipulation Language)，用于添加/修改/查询数据库中数据。</p><p>DML包含以下语句：</p><pre><code>- INSERT ：将数据插入到表或视图- DELETE ：从表或视图删除数据- SELECT ：从表或视图中获取数据- UPDATE ：更新表或视图中的数据- MERGE ： 对数据进行合并操作(插入/更新/删除)</code></pre><h3 id="3-数据控制语言DCL"><a href="#3-数据控制语言DCL" class="headerlink" title="3.数据控制语言DCL"></a>3.数据控制语言DCL</h3><p>DCL(Data Control Language)用来向用户赋予/取消对数据对象的控制权限。</p><p>DCL包含以下语句：</p><pre><code>- GRANT : 赋予用户某种控制权限- REVOKE ：取消用户某种控制权限</code></pre><h3 id="4-事务控制语言TCL"><a href="#4-事务控制语言TCL" class="headerlink" title="4.事务控制语言TCL"></a>4.事务控制语言TCL</h3><p>TCL(Transaction Control Language)用来对事务进行管理。</p><p>TCL包含以下语句：</p><pre><code>- COMMIT : 保存已完成事务动作结果- SAVEPOINT : 保存事务相关数据和状态用以可能的回滚操作- ROLLBACK : 恢复事务相关数据至上一次COMMIT操作之后- SET TRANSACTION : 设置事务选项</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;数据库&lt;/h2&gt;&lt;p&gt;DDL/DML/DCL/TCL基本概念&lt;/p&gt;
&lt;h3 id=&quot;1-数据定义语言DDL&quot;&gt;&lt;a href=&quot;#1-数据定义语言DDL
      
    
    </summary>
    
      <category term="数据库 | Database" scheme="http://macintosh-c.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93-Database/"/>
    
    
      <category term="database" scheme="http://macintosh-c.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>写在独立博客开创时</title>
    <link href="http://macintosh-c.github.io/2018/08/12/%E5%86%99%E5%9C%A8%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%88%9B%E6%97%B6/"/>
    <id>http://macintosh-c.github.io/2018/08/12/写在独立博客开创时/</id>
    <published>2018-08-12T03:09:55.000Z</published>
    <updated>2018-08-12T04:58:47.959Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>这几天花了些时间捣鼓出了自己的独立博客，到目前为止终于也算建立完成，去搭建这个博客的初衷很多，对于像我这个年纪才来捣鼓这些估计算晚的了，在搭建的过程中参考了网上许多大牛的博客，有还在大学时就着手搞这些的，是真的羡慕他们在年轻的时候就能找到自己的方向，便从那开始有所积累，亡羊补牢，希望我还为时不晚。</p><p>更多的个人看法以及情感还是后续写到其他分类文章里面，这篇还是多谈谈关于这个博客的事，为什么搭这么一个博客呢，原因有下面几点：</p><ol><li>积累。希望能借助这个博客平台多积累技术，改掉平时随手乱记，无纲要，无逻辑的习惯。<br></li><li>坚持。转行IT这条路对于我来说不知道还能走多远，这条路对于我来说能有多宽，那总要有一个坚持的方法。<br></li><li>总结。总感觉越大写作的能力在直线下滑，有时候有很多感慨和想法，想写却写不出来，有这么个博客，可以锻炼这方面的能力。<br></li></ol><p>网上关于如何用Hexo+Github来搭建独立博客的分享很多，我也不打算再去用篇幅讲述搭建详细了，主要参考了<a href="http://tengj.top/" target="_blank" rel="noopener">tengj</a>和<a href="https://whatbeg.com/" target="_blank" rel="noopener">whatbeg</a>两位兄台的分享，十分感谢！</p><h2 id="博客进展"><a href="#博客进展" class="headerlink" title="博客进展"></a>博客进展</h2><p>有必要简单讲述一下这个博客搭建的进展，以及后续还需要完善的地方，来继续鞭策自己</p><p>到目前为止已完成：</p><ul><li>hexo环境搭建，github关联。</li><li>初步熟悉hexo的基本配置，更换主题jacman，修改布局，新建文章，标签，分类等。</li><li>添加简单<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">文章，网站访问量统计</a>功能。</li><li>RSS订阅功能</li><li>Markdown语法，边写边学习。</li><li>添加了文章<a href="https://whatbeg.com/2016/05/18/hexo-donate.html" target="_blank" rel="noopener">打赏</a>功能。</li></ul><p>下一步还需要做的有：</p><ul><li>安装统计插件</li><li>添加站内搜索</li><li>提交搜索引擎</li></ul><h2 id="愿景"><a href="#愿景" class="headerlink" title="愿景"></a>愿景</h2><p>首先希望这个博客能在自我的坚持中一直写下去，让我在将来回头看时，有留下些许东西。主要涉猎的技术文章可能关于java，android，web，微信小程序等等。能力有限，仅供自己学习总结。其次，平时生活中的感想，感悟，感慨等，成长过程的脚印，总结也会用独立的分类篇幅来记录。再则，工作生活中阅读到的一些好的书本，语录等也会收集分享。希望勤能补拙。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>这次部署过程中受益于网络上各路大神们的细心总结，赠人玫瑰，手有余香。感谢！</p><p>就写到这吧，Markdown也不是很熟悉。总之，持之以恒，继续努力！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;这几天花了些时间捣鼓出了自己的独立博客，到目前为止终于也算建立完成，去搭建这个博客的初衷很多，对于像我这个年纪才来捣鼓这些估
      
    
    </summary>
    
      <category term="成长之路 | Biography" scheme="http://macintosh-c.github.io/categories/%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF-Biography/"/>
    
    
      <category term="随笔" scheme="http://macintosh-c.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
